FROM alpine:3.16.0

ENV GLIBC_VERSION 2.35-r0

# RUN useradd -s /bin/bash -m vscode \
#  && groupadd docker \
#  && usermod -aG docker vscode

RUN addgroup -S docker \ 
&& addgroup -g 1000 -S vscode \
&& adduser -u 1000 -D -S vscode -s /bin/bash -G docker

 # remember to keep package list sorted
RUN echo "  ---> Install packages" \
    && apk update \
    && apk upgrade \
    && apk --update add \
        alpine-sdk \
        ninja \
        eudev-dev \
        numactl-dev \
        libc-dev \
        libc6-compat \ 
        #gcompat \
        ncurses \
        ncurses-dev \
        openldap \
        openldap-dev \
        cyrus-sasl-dev \
        doxygen \
        libsasl \
        gdb \
        git \
        wget \
        curl \
        curl-dev \
        zstd-dev \
        openssh \
        pkgconfig \
        openssl \
        openssl-dev \
        bash \
        build-base \
        cmake \
        cppcheck \
        g++ \
        gcc \
        libstdc++ \
        python3 \
        clang \
        clang-extra-tools \
    && echo "  ---> Install python3 pip" \
    && python3 -m ensurepip \
    && rm -r /usr/lib/python*/ensurepip \
    && pip3 install --no-cache --upgrade pip setuptools wheel \
    && if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi \
    && echo "  ---> Install conan via python3 pip" \
    && pip install conan \
    && echo "  ---> Setup arch dependant settings" \
    && if [ $(getconf LONG_BIT) -eq 32 ]; then echo "export CONAN_ENV_ARCH="x86"" > /etc/profile.d/conanx86.sh ; fi \
    && echo "  ---> Cleaning cache" \
    && rm -rf /var/cache/apk/* \
    && echo "  ---> RUN complete"

# Download and install glibc
#RUN apk add --update curl && \
#  curl -Lo /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
#  curl -Lo glibc.apk "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk" && \
#  curl -Lo glibc-bin.apk "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk" && \
#  apk add glibc-bin.apk glibc.apk && \
#  /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \
#  echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \
#  apk del curl && \
#  rm -rf glibc.apk glibc-bin.apk /var/cache/apk/*

RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
&& wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \
&& apk add glibc-${GLIBC_VERSION}.apk

USER vscode
